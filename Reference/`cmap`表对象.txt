`cmap` 表对象
————————————————
public class table__c_m_a_p:

  public int tableVersion = 0;  // 不会自动生成！建表时必须手动填写！
  public String tableTag = "cmap";
  public List<CmapSubtable> tables;
  
  // Convert 3-byte string to uint32 big-endian
  public static unsigned int cvtToUVS(String threeByteString);
  
  // Convert charcode value (uint32 big-endian) to a 4-byte string
  public static String cvtFromUVS(uint32 big-endian value);
  
  // Split a range of character codes into subranges with consecutive
  // glyph IDs in such a way that the cmap4 subtable can be stored "most"
  // efficiently. (Automatically called when compiling cmap4 subtables.)
  public static (int[] start, int[] end[]) splitRange(int startCode, int endCode, Map<int codeID : String glyphName> cmap);


class CmapSubtable:

  public int platformID;
  public int platEncID;
  public int language;  // 仅供 Macintosh 子表使用，在 Unicode 与 Microsoft 子表中恒为 0
  public Map<int codeID : String glyphName> cmap;
  public int format;  // 使用 newSubtable() 时会自动赋值
  // 反编译时用到的数据
  public int length;  // 子表长度（字节）
  public byte[] data;  // 原始字节数据，对于 Unicode 子表会在其解析完成后清空，Macintosh 或未知子表类型会保留
  public TTFont ttFont;  // 指向子表所属的字体对象
  // cmap_format_12_or_13 专用，自动生成的数据
  public int reserved = 0;  // cmap_format_12_or_13 专用，初始化时自动设为 0
  public int nGroups;  // cmap_format_12_or_13 专用，编译时自动生成

  public static CmapSubtable newSubtable(int format);
  public String getEncoding(default = None);


class cmap_format_0 extends CmapSubtable;  // 1-byte (0xFF) encoding support, 0-255 glyph index support, legacy MacRoman only
class cmap_format_2 extends CmapSubtable;  // mixed 1/2-byte encoding support, legacy MacCJK/WinCJK local encodings only
class cmap_format_4 extends CmapSubtable;  // 2-byte (0xFFFF) encoding support, Unicode BMP (UCS-2) support WITHOUT range [U+D800 - U+DFFF]
class cmap_format_6 extends CmapSubtable;  // Dense 2-byte encoding support, modern MacRoman and Unicode BMP (UCS-2) support WITHOUT range [U+D800 - U+DFFF]
class cmap_format_12_or_13 extends CmapSubtable;
class cmap_format_12 extends cmap_format_12_or_13;  // 4-byte (0xFFFFFFFF) encoding support, Unicode full repertoire (UCS-4) support
class cmap_format_13 extends cmap_format_12_or_13;  // Many-to-one 4-byte encoding support, for Apple LastResort only
class cmap_format_14 extends CmapSubtable;  // 4-byte Unicode Variation Sequences support, for Unicode UVS only
class cmap_format_unknown extends CmapSubtable;  // Include cmap format 8 and 10


Mac Roman Python 內建编码方案：ord(unichr(22345).encode('mac_roman'))
Built-in function ord(): 
  Given a string of length one, return an integer representing the Unicode code point of the character
  when the argument is a unicode object, or the value of the byte when the argument is an 8-bit string.


注意符号字体检查：Microsoft (plat3, enc0, fmt4)
注意 Apple LastResort 检查：Unicode (plat0, enc6, fmt13)
注意 UVS 表检查：Unicode (plat0, enc5, fmt14)
Unicode (plat0, enc3, fmt4)、(plat0, enc4, fmt12)
Macintosh Roman (plat1, enc0, lng0, fmt0) or (plat1, enc0, lng0, fmt6)
Windows (plat3, enc1, fmt4)、(plat3, enc10, fmt12)